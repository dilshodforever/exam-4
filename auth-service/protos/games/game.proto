syntax = "proto3";

package game;

option go_package = "genprotos/game";

service GameService {
  rpc GetLevels(GetLevelsRequest) returns (GetLevelsResponse);
  rpc StartLevel(StartLevelRequest) returns (StartLevelResponse);
  rpc CompleteLevel(CompleteLevelRequest) returns (CompleteLevelResponse);
  rpc GetChallenge(GetChallengeRequest) returns (Level);
  rpc SubmitChallenge(SubmitChallengeRequest) returns (SubmitChallengeResponse);
  
  rpc GetLeaderboard(GetLeaderboardRequest) returns (LeaderboardResponse);
  
  rpc GetAchievements(GetAchievementsRequest) returns (AchievementsResponse);
  rpc CheckLevels(Cheak) returns (CHeakResult);

}


message GetLevelResponse {
  Level level = 1;
}


message GetLevelsRequest {
  string id = 1;
}

message GetLevelsResponse {
  repeated Level levels = 1;
}

message Level {
  string levelid = 1;
  string name = 2;
  string description = 3;
  int32 required_xp = 4;
  bool completed = 5;
  repeated Challenge challenges = 6;
  int32 cid=7;
}

message StartLevelRequest {
  string userid = 1;
  string level_id = 2;
}

message StartLevelResponse {
  string message = 1;
  string first_challenge_id = 2;
}

message CompleteLevelRequest {
  string userid = 1;
  string level_id = 2;
  int32 xpearned=3;
}

message CompleteLevelResponse {
  string message = 1;
  int32 xp_earned = 2;
  string new_level_unlocked = 3;
}

message Challenge {
  string id = 1;
  string name = 2;
  string type = 3;
  string description = 4;
  repeated Question questions=5;
}
message Question {
  string id = 1;
  string text = 2;
  repeated string options = 3;
  int32 correct_option=4;
}
message GetChallengeRequest {
  string challenge_id = 1;
}

message SubmitChallengeRequest {
  string userid = 1;
  string challenge_id = 2;
  repeated Answer answers = 3;
}

message SubmitChallengeResponse {
  int32 correct_answers = 1;
  int32 total_questions = 2;
  int32 xp_earned = 3;
  string feedback = 4;
}

message Answer {
  string question_id = 1;
  int32 selected_option = 2;
}




message SimulationParameters {
  map<string, string> parameters = 1;
}


message SimulationResult {
  repeated float interference_pattern = 1;
  int32 particle_detections = 2;
}

message GetLeaderboardRequest {
  string token = 1;
}

message LeaderboardResponse {
  repeated LeaderboardEntry leaderboard = 1;
  int32 user_rank = 2;
}

message LeaderboardEntry {
  int32 rank = 1;
  string username = 2;
  int32 level = 3;
  int32 xp = 4;
}

message GetAchievementsRequest {
  string token = 1;
}

message AchievementsResponse {
  repeated Achievement achievements = 1;
}

message Achievement {
  string id = 1;
  string name = 2;
  string description = 3;
  string earned_at = 4;
}




message Gate {
  string type = 1;
  int32 target = 2;
  int32 control = 3;
}






message Cheak{
  string levelid =1;
  int32 userxp=2;
}

message CHeakResult{
  string levelid=1;
  bool result=2;
  int32 xpearned=3;
}

