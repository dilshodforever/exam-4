// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/game/complete_level": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Complete an ongoing game level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Complete Level",
                "parameters": [
                    {
                        "description": "Complete level request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/game.CompleteLevelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Level completed successfully",
                        "schema": {
                            "$ref": "#/definitions/game.CompleteLevelResponse"
                        }
                    },
                    "500": {
                        "description": "Error while completing level",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/game/get_achievements": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve achievements based on criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get Achievements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "player_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Achievements list",
                        "schema": {
                            "$ref": "#/definitions/game.AchievementsResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching achievements",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/game/get_challenge": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a challenge by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get Challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Challenge ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Challenge details",
                        "schema": {
                            "$ref": "#/definitions/game.Challenge"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching challenge",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/game/get_leaderboard": {
            "get": {
                "security": [
                    {
                        "BearerAuthz": []
                    }
                ],
                "description": "Retrieve leaderboard based on criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get Leaderboard",
                "responses": {
                    "200": {
                        "description": "Leaderboard details",
                        "schema": {
                            "$ref": "#/definitions/game.LeaderboardResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching leaderboard",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/game/get_levels": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get details of the game levels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get Levels",
                "responses": {
                    "200": {
                        "description": "Game levels details",
                        "schema": {
                            "$ref": "#/definitions/game.GetLevelsResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching levels",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/game/start_level": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Start a new game level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Start Level",
                "parameters": [
                    {
                        "description": "Start level request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/game.StartLevelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Level started successfully",
                        "schema": {
                            "$ref": "#/definitions/game.StartLevelResponse"
                        }
                    },
                    "500": {
                        "description": "Error while starting level",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/game/submit_challenge": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Submit a response to a challenge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Submit Challenge",
                "parameters": [
                    {
                        "description": "Submit challenge request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/game.SubmitChallengeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Challenge submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/game.SubmitChallengeResponse"
                        }
                    },
                    "500": {
                        "description": "Error while submitting challenge",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/ai/storage": {
            "get": {
                "description": "Get AI storage information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Get storage from IA",
                "responses": {
                    "200": {
                        "description": "AI storage retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/learning.AistorageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/challenge/solution/submit": {
            "post": {
                "description": "Submit a solution for a challenge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Submit solution for a challenge",
                "parameters": [
                    {
                        "description": "Submit Challenge Solution Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learning.SubmitChallengeSolutionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Solution submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/learning.SubmitChallengeSolutionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/challenges": {
            "get": {
                "description": "Retrieves all challenges available",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Get all challenges",
                "responses": {
                    "200": {
                        "description": "Challenges retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/learning.GetChallengesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/progress": {
            "get": {
                "description": "Retrieves progress details for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Get progress for a user",
                "responses": {
                    "200": {
                        "description": "Progress details",
                        "schema": {
                            "$ref": "#/definitions/learning.ProgressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/quiz/submit": {
            "post": {
                "description": "Submit answers for a quiz",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Submit a quiz",
                "parameters": [
                    {
                        "description": "Submit Quiz Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learning.SubmitQuizRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/learning.SubmitQuizResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/recommendations": {
            "get": {
                "description": "Retrieves topic recommendations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Get recommendations",
                "responses": {
                    "200": {
                        "description": "Recommendations retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/learning.GetRecommendationsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/resource/complete": {
            "post": {
                "description": "Mark a resource as completed for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Complete a resource",
                "parameters": [
                    {
                        "description": "Complete Resource Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learning.CompleteResourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource completed successfully",
                        "schema": {
                            "$ref": "#/definitions/learning.CompleteResourceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/resources": {
            "get": {
                "description": "Retrieves all resources available",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Get all resources",
                "responses": {
                    "200": {
                        "description": "Resources retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/learning.GetResourcesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/topic/complete": {
            "post": {
                "description": "Mark a topic as completed for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Complete a topic",
                "parameters": [
                    {
                        "description": "Complete Topic Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learning.CompleteTopicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Topic completed successfully",
                        "schema": {
                            "$ref": "#/definitions/learning.CompleteTopicResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Topic not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/topic/{topic_id}": {
            "get": {
                "description": "Get details of a specific topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Get a topic by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic ID",
                        "name": "topic_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Topic details",
                        "schema": {
                            "$ref": "#/definitions/learning.Topic"
                        }
                    },
                    "404": {
                        "description": "Topic not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/learning/topics": {
            "get": {
                "description": "Retrieves all topics available",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Learning"
                ],
                "summary": "Get all topics",
                "responses": {
                    "200": {
                        "description": "Topics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/learning.GetTopicsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "game.Achievement": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "earned_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "game.AchievementsResponse": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/game.Achievement"
                    }
                }
            }
        },
        "game.Answer": {
            "type": "object",
            "properties": {
                "question_id": {
                    "type": "string"
                },
                "selected_option": {
                    "type": "integer"
                }
            }
        },
        "game.Challenge": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/game.Question"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "game.CompleteLevelRequest": {
            "type": "object",
            "properties": {
                "level_id": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                },
                "xpearned": {
                    "type": "integer"
                }
            }
        },
        "game.CompleteLevelResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "new_level_unlocked": {
                    "type": "string"
                },
                "xp_earned": {
                    "type": "integer"
                }
            }
        },
        "game.GetLevelsResponse": {
            "type": "object",
            "properties": {
                "levels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/game.Level"
                    }
                }
            }
        },
        "game.LeaderboardEntry": {
            "type": "object",
            "properties": {
                "level_id": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "user_xp": {
                    "type": "integer"
                }
            }
        },
        "game.LeaderboardResponse": {
            "type": "object",
            "properties": {
                "leaderboard": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/game.LeaderboardEntry"
                    }
                }
            }
        },
        "game.Level": {
            "type": "object",
            "properties": {
                "challenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/game.Challenge"
                    }
                },
                "cid": {
                    "type": "integer"
                },
                "completed": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "levelid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "required_xp": {
                    "type": "integer"
                }
            }
        },
        "game.Question": {
            "type": "object",
            "properties": {
                "correct_option": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "game.StartLevelRequest": {
            "type": "object",
            "properties": {
                "level_id": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "game.StartLevelResponse": {
            "type": "object",
            "properties": {
                "first_challenge_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "game.SubmitChallengeRequest": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/game.Answer"
                    }
                },
                "challenge_id": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "game.SubmitChallengeResponse": {
            "type": "object",
            "properties": {
                "correct_answers": {
                    "type": "integer"
                },
                "feedback": {
                    "type": "string"
                },
                "total_questions": {
                    "type": "integer"
                },
                "xp_earned": {
                    "type": "integer"
                }
            }
        },
        "learning.AistorageRespons": {
            "type": "object",
            "properties": {
                "request_text": {
                    "type": "string"
                },
                "response_text": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "learning.AistorageResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learning.AistorageRespons"
                    }
                }
            }
        },
        "learning.Challenge": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "xp_reward": {
                    "type": "integer"
                }
            }
        },
        "learning.CompleteResourceRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        },
        "learning.CompleteResourceResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "xp_earned": {
                    "type": "integer"
                }
            }
        },
        "learning.CompleteTopicRequest": {
            "type": "object",
            "properties": {
                "topic_id": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "learning.CompleteTopicResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "xp_earned": {
                    "type": "integer"
                }
            }
        },
        "learning.Content": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "learning.GetChallengesResponse": {
            "type": "object",
            "properties": {
                "challenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learning.Challenge"
                    }
                }
            }
        },
        "learning.GetRecommendationsResponse": {
            "type": "object",
            "properties": {
                "recommendations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learning.Topics"
                    }
                }
            }
        },
        "learning.GetResourcesResponse": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learning.Resource"
                    }
                }
            }
        },
        "learning.GetTopicsResponse": {
            "type": "object",
            "properties": {
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learning.Topic"
                    }
                }
            }
        },
        "learning.ProgressResponse": {
            "type": "object",
            "properties": {
                "overall_progress": {
                    "type": "number"
                },
                "quizzes_completed": {
                    "type": "integer"
                },
                "resources_completed": {
                    "type": "integer"
                },
                "topics_completed": {
                    "type": "integer"
                },
                "total_quizzes": {
                    "type": "integer"
                },
                "total_resources": {
                    "type": "integer"
                },
                "total_topics": {
                    "type": "integer"
                }
            }
        },
        "learning.Quiz": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learning.QuizQuestion"
                    }
                },
                "topic_id": {
                    "type": "string"
                }
            }
        },
        "learning.QuizAnswer": {
            "type": "object",
            "properties": {
                "question_id": {
                    "type": "string"
                },
                "selected_option": {
                    "type": "integer"
                }
            }
        },
        "learning.QuizQuestion": {
            "type": "object",
            "properties": {
                "correct_option": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "learning.Resource": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/learning.ResourceType"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "learning.ResourceType": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "ResourceType_ARTICLE",
                "ResourceType_INTERACTIVE"
            ]
        },
        "learning.SubmitChallengeSolutionRequest": {
            "type": "object",
            "properties": {
                "solution": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "learning.SubmitChallengeSolutionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "learning.SubmitQuizRequest": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learning.QuizAnswer"
                    }
                },
                "quiz_id": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "learning.SubmitQuizResponse": {
            "type": "object",
            "properties": {
                "correct_answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learning.QuizAnswer"
                    }
                },
                "feedback": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "total_questions": {
                    "type": "integer"
                },
                "xp_earned": {
                    "type": "integer"
                }
            }
        },
        "learning.Topic": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learning.Content"
                    }
                },
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "quiz": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/learning.Quiz"
                    }
                },
                "xpearned": {
                    "type": "integer"
                }
            }
        },
        "learning.Topics": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "api gat way",
	Description:      "Dilshod",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
